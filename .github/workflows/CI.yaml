name: build project
on:
 #Schedule pipeline run 30minutes / pipeline
    # schedule:
    #   - cron: "0/30 * * * *"
    repository_dispatch:
    push:
      branches: [main]
    
jobs: 
      Build-snapshots:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code 
            uses: actions/checkout@v2

          - name: Setup java
            uses: actions/setup-java@v3
            with:
              java-version: '11'
              distribution: 'adopt'   
            
          - name: Build snapshots for web
            run: |
             chmod +x mvnw
              mvn -N wrapper:wrapper -Dmaven=3.5.2
              ./mvnw spring-boot:build-image

          - name: Upload snapshots
            uses: actions/upload-artifact@v3
            with:
              name: my-snapshot
              path: target/spring-petclinic-2.6.0-SNAPSHOT.jar
              required: true
             

          - name: Cache building dependencies
            uses:  actions/cache@v2
            with:
              path: ~/.m2/repository
              key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              restore-keys: |
                  ${{ runner.os }}-maven-

          
      Build-and-upload-docker-image:

        runs-on:  ubuntu-latest
        needs: Build-snapshots
        steps:  

        - name: Setup docker buildx
          uses: docker/setup-buildx-action@v2
          id: buildx

        - name: Download snapshots
          uses: actions/download-artifact@v2
          with:
            name: my-snapshot


        - name: Login docker hub
          uses: docker/login-action@v1
          with:
                username: ${{ secrets.DOCKER_HUB_USERNAME}}
                password: ${{ secrets.DOCKER_HUB_PASSWORD}}

        - name: Build and push Docker Image
          uses: docker/build-push-action@v2
          id: docker_build
          with:
              context: ./
              file: ./Dockerfile
              builder: ${{steps.buildx.output.name}}
              push: true
              tags: ${{secrets.DOCKER_HUB_USERNAME}}/latest

        - name: Verify
          run: echo ${{steps.docker_build.output.digest }}            

            

            
